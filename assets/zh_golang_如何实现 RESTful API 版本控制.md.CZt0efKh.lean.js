import{_ as i,c as a,o as n,a6 as h}from"./chunks/framework.BNAytzmZ.js";const g=JSON.parse('{"title":"别再瞎改 API 了 3 招版本控制，让你的 Go 服务稳如老狗","description":"深入探讨 RESTful API 版本控制的策略和实践，包括 URI、头部和内容协商方法，并提供 Go 语言的详细示例。","frontmatter":{"title":"别再瞎改 API 了 3 招版本控制，让你的 Go 服务稳如老狗","date":"2025-08-18T00:00:00.000Z","tags":["golang","RESTful API","API 版本控制","微服务"],"author":"PFinal南丞","keywords":"golang, RESTful API, API 版本控制, 微服务, 软件架构, URI 版本控制, 头部版本控制, 内容协商","description":"深入探讨 RESTful API 版本控制的策略和实践，包括 URI、头部和内容协商方法，并提供 Go 语言的详细示例。","head":[["meta",{"name":"keywords","content":"golang, RESTful API, API 版本控制, 微服务, 软件架构, URI 版本控制, 头部版本控制, 内容协商"}]]},"headers":[],"relativePath":"zh/golang/如何实现 RESTful API 版本控制.md","filePath":"zh/golang/如何实现 RESTful API 版本控制.md","lastUpdated":1755499133000}'),k={name:"zh/golang/如何实现 RESTful API 版本控制.md"};function t(l,s,p,E,e,r){return n(),a("div",{"data-pagefind-body":!0},s[0]||(s[0]=[h("",56)]))}const y=i(k,[["render",t]]);export{g as __pageData,y as default};
