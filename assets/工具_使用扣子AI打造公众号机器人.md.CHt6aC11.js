import{_ as n,c as s,o as p,a6 as l}from"./chunks/framework.B5rgnJXo.js";const h=JSON.parse('{"title":"使用扣子AI打造公众号机器人","description":"使用扣子AI打造公众号机器人","frontmatter":{"title":"使用扣子AI打造公众号机器人","date":"2024-06-21T09:32:24.000Z","tags":["工具"],"description":"使用扣子AI打造公众号机器人","author":"PFinal南丞","keywords":"使用扣子AI打造公众号机器人, AI,机器人 , 公众号,浏览器小技巧, 浏览器, 技巧,让CLI工具焕然一新！用golang与Color库打造多彩命令行体验, golang, 工具, 项目, 快速, 工具,MySQL, 配置文件, 解析, 优化, 数据库, 配置, 管理, 优化建议, 配置文件解析, MySQL配置文件, MySQL配置,Docker, 部署, Go, 项目, 实践, 指南,Git, 操作, 版本控制, 编程, Git基本操作,IDE, 工具, 效率, 编程, 插件, 开发, 效率工具,Nginx, 配置文件, 详解, 配置, Nginx配置文件详解, Nginx配置文件详解,PHP-FPM配置文件解析, php, 工具, php-fpm配置文件, php-fpm配置文件解析, php-fpm配置文件详解,PHP异步处理, php, 工具, php异步处理, php协程, php异步协程,PHP, 进程, 线程, 解析, PHP进程, PHP线程, PHP进程线程, PHP进程线程解析, PHP进程线程解析,PHP, 配置文件, 详解, 编程, web开发, 服务器配置,PHP钩子, php, 工具, php钩子, php钩子应用, php钩子的实现,Redis, 基本知识, 总结, 数据库, NoSQL, 缓存, 计数器, 排行榜, 社交网络, 消息队列, 分布式锁,Redis配置文件详解, 数据库, redis,TCP/IP,HTTP,Python, 库, 函数, 常用, Faker, 生成, 数据, 测试, 模拟,Python, 协程, 并发, 编程, asyncio, 异步IO, Future, Task,Python, 网站, 搜集, 资源, 开发, 编程, 工具, 镜像站, 爬虫,Python版本管理神器之pyenv, python, 工具, python版本管理, pyenv使用教程, python环境配置,爬虫, 加密, 解密, 算法, 特征, 收集,爬虫JS逆向Webpack技巧记录, 爬虫, JS, Webpack,爬虫, 加密, 解密, 算法, 特征, 收集,Composer, 配置文件, 依赖管理, 包管理, 版本控制,PHP, $_SERVER,PHP, 会话, 引发, Bug, PHP_SESSION, $_SESSION, 会话管理,PHP, 生成器, 解析, PHP生成器, PHP生成器解析, PHP生成器解析,PHP, 错误与异常处理, 异常, 错误, 处理, 异常处理, 错误处理, 程序, 健壮性, 稳定性,golang, gopsutil, 系统库, 监控, 系统信息, 进程, 进程监控, 系统信息获取,使用Go实现服务端事件推送SSE, golang, 项目创建, 快速创建, 工具, 项目, 快速, 工具,用Wails和Vue.js打造跨平台桌面应用程序, Wails, Vue.js, 跨平台桌面应用程序, 抖音, 直播,基于Wails的Mac桌面应用开发, golang, Wails, 桌面应用, 开发,基于Wails的抖音直播工具, golang, Wails, 抖音, 直播, 工具, 桌面应用,golang, 游戏开发, 接口设计, 高性能, 高并发, 游戏服务器, 游戏接口, 游戏框架,Wails, 应用, 开发, 尝试, 桌面应用, Go, Web开发, Tailwindcss, sqlite,Go-Cache, Wails, 内存缓存, 性能优化, 缓存策略, 内存管理, 应用程序性能,golang, 工具, 提升生产力, 开发, golang, Go开发, Go工具, Go扩展包,提速利器：使用Go语言实现静态化API, golang, 项目创建, 快速创建, 工具, 项目, 快速, 工具,深入Go内存分配, golang, 内存分配,Go Channel, 批量读取, 实际应用,Laravel, 构建, 手工, 框架, 手工构建, PHP,Laravel, Carbon, 类, 使用, Laravel-Carbon-类使用, Laravel-Carbon-类使用解析,PHP, 进程, 线程, 解析, PHP进程, PHP线程, PHP进程线程, PHP进程线程解析, PHP进程线程解析,golang, TLS, SSL, 网络安全, 传输层安全协议, 安全套接层, 加密, 数据传输, 网络通信,Golang, 协程池, 实现, 方法, 协程, 池, 概念, 应用, 场景, 实现方式, 协程池功能, 性能, 响应速度,golang, 脱敏扩展包：简化敏感信息处理的利器, 工具, golang扩展包, golang脱敏, golang脱敏工具,Golang, 工具, 效率, 提升, 小工具, 代码质量, 开发, 编程, 工具, 自动格式化, 自动导入, 代码补全,undefined,AutoCorrent专有名词大小写扩展包, golang, 项目创建, 快速创建, 工具, 项目, 快速, 工具,Create Go App CLI, golang, 项目创建, 快速创建, 工具, 项目, 快速, 工具,Go语言开发终端小工具后续, Go, 工具, 终端, 小工具, 开发, 编程, 命令, 工具开发, 代码实现, 运行命令,GO开发IP过滤小脚本, go, 工具, go开发ip过滤, go ip过滤脚本, go ip过滤,Go 开发终端小工具, golang, 工具, 开发, 编程, 终端, 天气查询, 手机归属地查询, cobra库, 命令行小工具,Go语言的高性能User-Agent解析库, golang, 工具, User-Agent解析, 性能测试, 解析库,golang, 地址生成, 扩展包, 地理位置, 中国地址, 地址生成工具, 地址数据, 地址库,Gomail邮件发送包, golang, 工具, 邮件发送, 邮件接收, 邮件发送包, 邮件发送工具,Go, URL检测, 工具, 编程, 终端命令, 开发, 检测, 小工具, 终端命令小工具, Go终端命令小工具,Go语言安全库使用指南, Go语言, 安全库, 使用指南, crypto, encoding, hash, math, rand, strconv, time,Go语言实现守护进程, 守护进程, 技术详解, Go语言, 进程管理, 关键技术点,Go, 并发, 模式, 编程, 并发编程, Go语言, 并发模式, 并发实战, 并发指南,go:embed 在 Go 开发中的应用与最佳实践, golang, 项目创建, 快速创建, 工具, 项目, 快速, 工具,Golang, Web应用, 安全指南, 输入验证, 输出编码, 会话管理, 文件上传, 跨站脚本攻击, SQL注入, 密码存储, 身份验证, 授权, 安全配置, 日志记录, 错误处理, 性能优化, 安全审计,pfinalclub, git, gitsite, javascript, node, jquery, python, php, laravel, sql, database, linux, operating system, os, cpu, verilog, risc-v, bitcoin, ethereum, ai, 教程, 软件, 编程, 开发, 运维, 云计算, 网络, 互联网, 比特币, 以太坊, 操作系统, 智能合约, 数字货币, 爬虫, 逆向"},"headers":[],"relativePath":"工具/使用扣子AI打造公众号机器人.md","filePath":"工具/使用扣子AI打造公众号机器人.md","lastUpdated":1742353061000}'),e={name:"工具/使用扣子AI打造公众号机器人.md"};function o(t,a,i,r,g,c){return p(),s("div",{"data-pagefind-body":!0},a[0]||(a[0]=[l(`<h1 id="使用扣子ai打造公众号机器人" tabindex="-1">使用扣子AI打造公众号机器人 <a class="header-anchor" href="#使用扣子ai打造公众号机器人" aria-label="Permalink to &quot;使用扣子AI打造公众号机器人&quot;">​</a></h1><p>刷掘金的时候,看到了扣子AI,支持公众号接入,好多公众号主都已接入,实现了好多好玩的功能.于是作为一个能偷懒就上的原则.也接入一下试试. 毕竟 每次遇到编程问题,不是打开 chatgpt,就是打开谷歌.相对于每天登录微信而言,是有点麻烦,所以开搞.</p><h3 id="搭建机器人" tabindex="-1">搭建机器人 <a class="header-anchor" href="#搭建机器人" aria-label="Permalink to &quot;搭建机器人&quot;">​</a></h3><p><img src="https://raw.githubusercontent.com/pfinal-nc/iGallery/master/blog/202406211035539.png" alt=""></p><p>如上图所示:</p><ol><li>点击创建bot</li></ol><p><img src="https://raw.githubusercontent.com/pfinal-nc/iGallery/master/blog/202406211036569.png" alt=""></p><ol start="2"><li><p>如上图所示.重点来了,之前尝试搭建过,一直以为模型选的好,效果才能杠杠滴.后来多玩了几次后.发现 人设与回复逻辑写的好,出来的效果更好.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># 角色</span></span>
<span class="line"><span>你是一位资深的软件开发工作者，精通多种编程语言，如 Java、Python、Go、Shell、h5、js、ts 等，同时还拥有丰富的运维和 DBA 从业经验。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 技能</span></span>
<span class="line"><span>### 技能 1: 解答研发过程中的问题</span></span>
<span class="line"><span>1. 当用户在研发过程中遇到问题时，你需要使用相关工具搜索解决方案。</span></span>
<span class="line"><span>2. 如果你不确定如何解决问题，可以使用工具搜索相关的技术文章或论坛帖子，以获取更多的信息。</span></span>
<span class="line"><span>3. 根据搜索结果，提供详细的解决方案，帮助用户解决问题。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>### 技能 2: 提供软件设计解决方案</span></span>
<span class="line"><span>1. 当用户需要软件设计解决方案时，你需要先了解用户的需求和目标。</span></span>
<span class="line"><span>2. 根据用户的需求和目标，提供可行的软件设计方案。</span></span>
<span class="line"><span>3. 与用户沟通，确保设计方案符合用户的需求和期望。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 限制</span></span>
<span class="line"><span>- 只讨论与软件开发相关的内容，拒绝回答与软件开发无关的话题。</span></span>
<span class="line"><span>- 所输出的内容必须按照给定的格式进行组织，不能偏离框架要求。</span></span>
<span class="line"><span>- 总结部分不能超过 100 字。</span></span>
<span class="line"><span>- 只会输出知识库中已有内容, 不在知识库中的书籍, 通过 工具去了解。</span></span></code></pre></div><p>上面是大神的 人设 与提示语.复制过来就可以用了</p></li><li><p>后面选择插件, 很多人跟我一样,不知道选啥插件的时候,就如下图所示:</p><p><img src="https://raw.githubusercontent.com/pfinal-nc/iGallery/master/blog/202406211040393.png" alt=""></p></li></ol><p>​ 根据提示语自动选插件,然后后期慢慢调试.</p><ol start="4"><li><p>调试一下机器人试试,效果还不错 <img src="https://raw.githubusercontent.com/pfinal-nc/iGallery/master/blog/202406211041366.png" alt=""></p></li><li><p>发布到公众号,公众号后台 拿到 AppID 一填写,点击发布.就可以在公众号下 愉快的玩耍嘞</p></li></ol><p><img src="https://raw.githubusercontent.com/pfinal-nc/iGallery/master/blog/202406211055281.png" alt=""></p><h3 id="公众号下尝试" tabindex="-1">公众号下尝试 <a class="header-anchor" href="#公众号下尝试" aria-label="Permalink to &quot;公众号下尝试&quot;">​</a></h3><p>由于我的公众号之前设置了自动回复,于是 先 去掉了自动回复,然后重新授权.进行了测试.效果如下:</p><p><img src="https://raw.githubusercontent.com/pfinal-nc/iGallery/master/blog/202406211048888.png" alt=""></p><p>这样就可以愉快的玩耍起来了, 注意这个值回答 编程之内的问题昂</p>`,15)]))}const d=n(e,[["render",o]]);export{h as __pageData,d as default};
