import{_ as s,c as n,o as e,a6 as p}from"./chunks/framework.CwlnujpX.js";const r=JSON.parse('{"title":"Python版本管理神器之pyenv","description":"详细介绍pyenv这款强大的Python版本管理工具，包括安装配置、版本切换、虚拟环境管理等核心功能，帮助开发者轻松管理多个Python版本。","frontmatter":{"title":"Python版本管理神器之pyenv","date":"2023-04-27T22:10:20.000Z","author":"PFinal南丞","tags":["python"],"keywords":"Python版本管理神器之pyenv, python, 工具, python版本管理, pyenv使用教程, python环境配置","description":"详细介绍pyenv这款强大的Python版本管理工具，包括安装配置、版本切换、虚拟环境管理等核心功能，帮助开发者轻松管理多个Python版本。","head":[["meta",{"name":"keywords","content":"Python版本管理神器之pyenv, python, 工具, python版本管理, pyenv使用教程, python环境配置,pfinalclub, git, gitsite, javascript, node, jquery, python, php, laravel, sql, database, linux, operating system, os, cpu, verilog, risc-v, bitcoin, ethereum, ai, 教程, 软件, 编程, 开发, 运维, 云计算, 网络, 互联网, 比特币, 以太坊, 操作系统, 智能合约, 数字货币, 爬虫, 逆向"}]]},"headers":[],"relativePath":"python/Python版本管理神器之pyenv.md","filePath":"python/Python版本管理神器之pyenv.md","lastUpdated":1741944848000}'),t={name:"python/Python版本管理神器之pyenv.md"};function l(i,a,o,c,h,d){return e(),n("div",{"data-pagefind-body":!0},a[0]||(a[0]=[p(`<h1 id="python版本管理神器之pyenv-最佳python版本管理工具" tabindex="-1">Python版本管理神器之pyenv - 最佳Python版本管理工具 <a class="header-anchor" href="#python版本管理神器之pyenv-最佳python版本管理工具" aria-label="Permalink to &quot;Python版本管理神器之pyenv - 最佳Python版本管理工具&quot;">​</a></h1><h3 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h3><p>之前一直在用 virtualenv 和 virtualenvwrapper 这两个工具管理 Python 虚拟环境，但是有个问题，就是想要创建指定版本的虚拟环境就必须先安装指定的 Python 版本，比如我想创建一个基于 Python3.6 的虚拟环境，那么我首先得安装 Python3.6（不管是直接安装还是源码安装，总之比较麻烦），然后在基于安装好的版本去创建虚拟环境，自从知道了 pyenv 这个神器之后，就几乎不用上述工具了。 ～ pyenv 好像对 Windows 平台不太友好。</p><h3 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h3><blockquote><p>GitHub <a href="https://github.com/pyenv/pyenv" target="_blank" rel="noreferrer">https://github.com/pyenv/pyenv</a></p></blockquote><h3 id="ubuntu安装" tabindex="-1">Ubuntu安装 <a class="header-anchor" href="#ubuntu安装" aria-label="Permalink to &quot;Ubuntu安装&quot;">​</a></h3><h4 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h4><ul><li>方式一（速度慢）：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    git clone https://github.com/yyuu/pyenv.git ~/.pyenv</span></span></code></pre></div><ul><li>方式二（速度快）：</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash</span></span></code></pre></div><p>执行上述操作之后，会将 pyenv 安装到当前用户的 ～/.pyenv 目录下</p><h4 id="编辑-bashrc-文件" tabindex="-1">编辑 .bashrc 文件 <a class="header-anchor" href="#编辑-bashrc-文件" aria-label="Permalink to &quot;编辑 .bashrc 文件&quot;">​</a></h4><ol><li>打开 .bascrc 文件</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vim ~/.bashrc</span></span></code></pre></div><p>2 .将一下内容复制到末尾</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>export PYENV_ROOT=/root/.pyenv</span></span>
<span class="line"><span>export PATH=$PYENV_ROOT/bin:$PATH</span></span>
<span class="line"><span>export PATH=$PYENV_ROOT/shims:$PATH</span></span>
<span class="line"><span>eval &quot;$(pyenv init -)&quot;</span></span></code></pre></div><p>3.更新 .bashrc 文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>source ~/.bashrc</span></span></code></pre></div><h4 id="安装-python-依赖" tabindex="-1">安装 Python 依赖 <a class="header-anchor" href="#安装-python-依赖" aria-label="Permalink to &quot;安装 Python 依赖&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install make build-essential libssl-dev zlib1g-dev</span></span>
<span class="line"><span>sudo apt-get install libbz2-dev libreadline-dev libsqlite3-dev wget curl</span></span>
<span class="line"><span>sudo apt-get install llvm libncurses5-dev libncursesw5-dev</span></span>
<span class="line"><span>sudo apt-get update</span></span></code></pre></div><h4 id="测试使用" tabindex="-1">测试使用 <a class="header-anchor" href="#测试使用" aria-label="Permalink to &quot;测试使用&quot;">​</a></h4><p>查看是否安装成功</p><ul><li>查看当前安装版本</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>IN:</span></span>
<span class="line"><span>	pyenv --version</span></span>
<span class="line"><span>OUT:</span></span>
<span class="line"><span>	pyenv 1.2.27-34-gbba1289e</span></span></code></pre></div><ul><li>查看当前所有 Python 版本</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>IN:</span></span>
<span class="line"><span>	pyenv versions</span></span>
<span class="line"><span>OUT:</span></span>
<span class="line"><span>	* system (set by /root/.pyenv/version)</span></span></code></pre></div><blockquote><p>表示当前只有系统默认的版本</p></blockquote><h4 id="安装-python-指定版本" tabindex="-1">安装 Python 指定版本 <a class="header-anchor" href="#安装-python-指定版本" aria-label="Permalink to &quot;安装 Python 指定版本&quot;">​</a></h4><ul><li>查看当前所有可安装版本</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    pyenv install --list</span></span></code></pre></div><ul><li>安装想要安装的版本（这里选择 Python3.6.5）</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>IN:</span></span>
<span class="line"><span>	pyenv install 3.6.5</span></span>
<span class="line"><span>OUT:</span></span>
<span class="line"><span>  Downloading Python-3.6.5.tar.xz...</span></span>
<span class="line"><span>  -&gt; https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tar.xz</span></span>
<span class="line"><span>  Installing Python-3.6.5...</span></span>
<span class="line"><span>  Installed Python-3.6.5 to /root/.pyenv/versions/3.6.5</span></span></code></pre></div><ul><li>再次查看所有 Python 版本</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>IN:</span></span>
<span class="line"><span>	pyenv versions</span></span>
<span class="line"><span>OUT:</span></span>
<span class="line"><span>  * system (set by /root/.pyenv/version)</span></span>
<span class="line"><span>    3.6.5</span></span></code></pre></div><ul><li><p>切换 Python 版本</p><p>有三种切换方式 glocal local shell*</p><p>glocal 全局环境，在未再次使用 glocal切换环境之前，一直使用此环境。</p><p>local 本次登录环境，重启后，则环境失效，并返回当前glocal的环境。</p><p>shell 局部（临时）环境。关闭命令行窗口，则环境失效，并返回当前glocal的环境。</p><p>pyenv glocal 3.6.5</p></li><li><p>卸载指定版本</p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    pyenv uninstall 3.6.5</span></span></code></pre></div><h3 id="安装-virtualenv" tabindex="-1">安装 virtualenv <a class="header-anchor" href="#安装-virtualenv" aria-label="Permalink to &quot;安装 virtualenv&quot;">​</a></h3><ul><li>下载</li></ul><blockquote><p>pyenv 已经帮我们以 plugin 的形式安装好了，如果未安装，则需要我们手动安装一下</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    git clone https://github.com/pyenv/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv</span></span></code></pre></div><ul><li>编辑 .bashrc 文件</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    vim ~/.bashrc</span></span></code></pre></div><ul><li>将以下内容复制到末尾</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    eval &quot;$(pyenv virtualenv-init -)&quot;</span></span></code></pre></div><ul><li>更新 .bashrc 文件</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    source ~/.bashrc</span></span></code></pre></div><h3 id="创建虚拟环境" tabindex="-1">创建虚拟环境 <a class="header-anchor" href="#创建虚拟环境" aria-label="Permalink to &quot;创建虚拟环境&quot;">​</a></h3><ul><li><p>使用说明： pyenv virtualenv 3.6.5 virtual_name(自定义虚拟环境名)</p></li><li><p>实际使用：pyenv virtualenv 3.6.5 test</p></li><li><p>进入虚拟环境</p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>   pyenv activate test</span></span></code></pre></div><ul><li>退出虚拟环境</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>   pyenv deactivate</span></span></code></pre></div><ul><li>删除虚拟环境</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    pyenv uninstall test</span></span></code></pre></div><p>输入yes即可</p><h3 id="常用命令" tabindex="-1">常用命令 <a class="header-anchor" href="#常用命令" aria-label="Permalink to &quot;常用命令&quot;">​</a></h3><p>使用方式: pyenv &lt;命令&gt; [&lt;参数&gt;]</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>命令:</span></span>
<span class="line"><span>  commands    查看所有命令</span></span>
<span class="line"><span>  local       设置或显示本地的 Python 版本（当前目录及其子目录）</span></span>
<span class="line"><span>  global      设置或显示全局 Python 版本</span></span>
<span class="line"><span>  shell       设置或显示 shell 指定的 Python 版本（本次会话）</span></span>
<span class="line"><span>  install     安装指定 Python 版本</span></span>
<span class="line"><span>  uninstall   卸载指定 Python 版本</span></span>
<span class="line"><span>  version     显示当前的 Python 版本及其本地路径</span></span>
<span class="line"><span>  versions    查看所有已经安装的版本</span></span>
<span class="line"><span>  which       显示安装路径</span></span></code></pre></div><h3 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h3><p>1.切换不成功 如果遇到切换之后，Python版本还是系统的默认版本的话，就需要配置一下环境变量，在 ~/.zshrc 或 ~/.bash_profile 文件最后写入：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>if which pyenv &gt; /dev/null;</span></span>
<span class="line"><span>  then eval &quot;$(pyenv init -)&quot;;</span></span>
<span class="line"><span>fi</span></span></code></pre></div><hr>`,62)]))}const v=s(t,[["render",l]]);export{r as __pageData,v as default};
