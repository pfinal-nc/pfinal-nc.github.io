import{_ as i,c as a,o as n,a6 as h}from"./chunks/framework.dsRYTprt.js";const g=JSON.parse('{"title":"Golang Socket 通信架构分析与实现-构建高性能游戏服务器","description":"","frontmatter":{"title":"Golang Socket 通信架构分析与实现-构建高性能游戏服务器","date":"2025-10-15T15:00:00.000Z","categories":["后端","Golang"],"tags":["Socket","游戏服务器","高性能","并发编程","网络编程"],"head":[["meta",{"name":"keywords","content":"pfinalclub, git, gitsite, javascript, node, jquery, python, php, laravel, sql, database, linux, operating system, os, cpu, verilog, risc-v, bitcoin, ethereum, ai, 教程, 软件, 编程, 开发, 运维, 云计算, 网络, 互联网, 比特币, 以太坊, 操作系统, 智能合约, 数字货币, 爬虫, 逆向, usd php, wails golang"}]]},"headers":[],"relativePath":"zh/golang/Golang Socket 通信架构分析与实现-构建高性能游戏服务器.md","filePath":"zh/golang/Golang Socket 通信架构分析与实现-构建高性能游戏服务器.md","lastUpdated":1760929786000}'),k={name:"zh/golang/Golang Socket 通信架构分析与实现-构建高性能游戏服务器.md"};function l(p,s,t,e,E,r){return n(),a("div",{"data-pagefind-body":!0},s[0]||(s[0]=[h("",107)]))}const y=i(k,[["render",l]]);export{g as __pageData,y as default};
