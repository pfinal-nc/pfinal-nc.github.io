import{_ as i,c as a,o as n,a6 as h}from"./chunks/framework.BNAytzmZ.js";const g=JSON.parse('{"title":"Mastering Error Handling in Go for Robust Applications","description":"A comprehensive guide to advanced error handling techniques in Go, covering sentinel errors, error wrapping, custom error types, context integration, and testing strategies for building robust and maintainable applications.","frontmatter":{"title":"Mastering Error Handling in Go for Robust Applications","date":"2025-08-18T00:00:00.000Z","tags":["golang","error handling","best practices","robustness","software engineering"],"author":"PFinal南丞","keywords":"golang, error handling, sentinel errors, error wrapping, custom errors, context, testing, best practices, robust applications","description":"A comprehensive guide to advanced error handling techniques in Go, covering sentinel errors, error wrapping, custom error types, context integration, and testing strategies for building robust and maintainable applications.","head":[["meta",{"name":"keywords","content":"golang, error handling, sentinel errors, error wrapping, custom errors, context, testing, best practices, robust applications"}]]},"headers":[],"relativePath":"golang/mastering-go-error-handling.md","filePath":"golang/mastering-go-error-handling.md","lastUpdated":1755497083000}'),t={name:"golang/mastering-go-error-handling.md"};function l(k,s,p,e,r,E){return n(),a("div",{"data-pagefind-body":!0},s[0]||(s[0]=[h("",79)]))}const y=i(t,[["render",l]]);export{g as __pageData,y as default};
