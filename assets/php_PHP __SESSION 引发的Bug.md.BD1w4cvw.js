import{_ as i,c as a,o as n,a6 as p}from"./chunks/framework.B5rgnJXo.js";const d=JSON.parse('{"title":"PHP $_SESSION 引发的Bug","description":"PHP $_SESSION 引发的Bug","frontmatter":{"title":"PHP $_SESSION 引发的Bug","date":"2023-11-09T11:31:32.000Z","tags":["PHP"],"description":"PHP $_SESSION 引发的Bug","author":"PFinal南丞","keywords":"PHP, 会话, 引发, Bug, PHP_SESSION, $_SESSION, 会话管理,PHP, 生成器, 解析, PHP生成器, PHP生成器解析, PHP生成器解析,PHP, 错误与异常处理, 异常, 错误, 处理, 异常处理, 错误处理, 程序, 健壮性, 稳定性,golang, gopsutil, 系统库, 监控, 系统信息, 进程, 进程监控, 系统信息获取,使用Go实现服务端事件推送SSE, golang, 项目创建, 快速创建, 工具, 项目, 快速, 工具,用Wails和Vue.js打造跨平台桌面应用程序, Wails, Vue.js, 跨平台桌面应用程序, 抖音, 直播,基于Wails的Mac桌面应用开发, golang, Wails, 桌面应用, 开发,基于Wails的抖音直播工具, golang, Wails, 抖音, 直播, 工具, 桌面应用,golang, 游戏开发, 接口设计, 高性能, 高并发, 游戏服务器, 游戏接口, 游戏框架,Wails, 应用, 开发, 尝试, 桌面应用, Go, Web开发, Tailwindcss, sqlite,Go-Cache, Wails, 内存缓存, 性能优化, 缓存策略, 内存管理, 应用程序性能,golang, 工具, 提升生产力, 开发, golang, Go开发, Go工具, Go扩展包,提速利器：使用Go语言实现静态化API, golang, 项目创建, 快速创建, 工具, 项目, 快速, 工具,深入Go内存分配, golang, 内存分配,Go Channel, 批量读取, 实际应用,Laravel, 构建, 手工, 框架, 手工构建, PHP,Laravel, Carbon, 类, 使用, Laravel-Carbon-类使用, Laravel-Carbon-类使用解析,PHP, 进程, 线程, 解析, PHP进程, PHP线程, PHP进程线程, PHP进程线程解析, PHP进程线程解析,golang, TLS, SSL, 网络安全, 传输层安全协议, 安全套接层, 加密, 数据传输, 网络通信,Golang, 协程池, 实现, 方法, 协程, 池, 概念, 应用, 场景, 实现方式, 协程池功能, 性能, 响应速度,golang, 脱敏扩展包：简化敏感信息处理的利器, 工具, golang扩展包, golang脱敏, golang脱敏工具,Golang, 工具, 效率, 提升, 小工具, 代码质量, 开发, 编程, 工具, 自动格式化, 自动导入, 代码补全,undefined,AutoCorrent专有名词大小写扩展包, golang, 项目创建, 快速创建, 工具, 项目, 快速, 工具,Create Go App CLI, golang, 项目创建, 快速创建, 工具, 项目, 快速, 工具,Go语言开发终端小工具后续, Go, 工具, 终端, 小工具, 开发, 编程, 命令, 工具开发, 代码实现, 运行命令,GO开发IP过滤小脚本, go, 工具, go开发ip过滤, go ip过滤脚本, go ip过滤,Go 开发终端小工具, golang, 工具, 开发, 编程, 终端, 天气查询, 手机归属地查询, cobra库, 命令行小工具,Go语言的高性能User-Agent解析库, golang, 工具, User-Agent解析, 性能测试, 解析库,golang, 地址生成, 扩展包, 地理位置, 中国地址, 地址生成工具, 地址数据, 地址库,Gomail邮件发送包, golang, 工具, 邮件发送, 邮件接收, 邮件发送包, 邮件发送工具,Go, URL检测, 工具, 编程, 终端命令, 开发, 检测, 小工具, 终端命令小工具, Go终端命令小工具,Go语言安全库使用指南, Go语言, 安全库, 使用指南, crypto, encoding, hash, math, rand, strconv, time,Go语言实现守护进程, 守护进程, 技术详解, Go语言, 进程管理, 关键技术点,Go, 并发, 模式, 编程, 并发编程, Go语言, 并发模式, 并发实战, 并发指南,go:embed 在 Go 开发中的应用与最佳实践, golang, 项目创建, 快速创建, 工具, 项目, 快速, 工具,Golang, Web应用, 安全指南, 输入验证, 输出编码, 会话管理, 文件上传, 跨站脚本攻击, SQL注入, 密码存储, 身份验证, 授权, 安全配置, 日志记录, 错误处理, 性能优化, 安全审计,pfinalclub, git, gitsite, javascript, node, jquery, python, php, laravel, sql, database, linux, operating system, os, cpu, verilog, risc-v, bitcoin, ethereum, ai, 教程, 软件, 编程, 开发, 运维, 云计算, 网络, 互联网, 比特币, 以太坊, 操作系统, 智能合约, 数字货币, 爬虫, 逆向"},"headers":[],"relativePath":"php/PHP $_SESSION 引发的Bug.md","filePath":"php/PHP $_SESSION 引发的Bug.md","lastUpdated":1741944848000}'),t={name:"php/PHP $_SESSION 引发的Bug.md"};function l(e,s,h,k,o,g){return n(),a("div",{"data-pagefind-body":!0},s[0]||(s[0]=[p(`<h1 id="php-session-引发的bug" tabindex="-1">PHP $_SESSION 引发的Bug <a class="header-anchor" href="#php-session-引发的bug" aria-label="Permalink to &quot;PHP $_SESSION 引发的Bug&quot;">​</a></h1><p>刚处理了一个 公司老系统的 BUG, 记录一下。</p><p>BUG: 老系统之前登录的时候正常, 昨天突然 登录不上去了</p><p>分析查找:</p><ol><li><p>尝试错误的账号 和 密码, 跳转正常, 弹出了账号密码错误</p></li><li><p>使用正确的账号密码,登录不给任何提示直接跳回</p></li><li><p>翻看源码 发现登录 代码如下:</p></li></ol><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 省略前面的操作</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $data </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> check_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($user_name,$password);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">session_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $_SESSION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $data; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这里的写法 第一次碰到</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  print</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;script&gt;window.location=&#39;index.php&#39;&lt;/script&gt;&quot;</span></span></code></pre></div><ol start="4"><li>查看 <em>index.php</em> 中的代码:</li></ol><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">session_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $user_name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $_SESSION[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user_name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>乍一看 上面的代码 没有任何的问题, 因为之前的代码 也是这种逻辑,是正常的在用，于是 在本地 测试了一下. 主要怀疑 <em>$_SESSIO</em> 写入的时候的问题</p><p>本地新建了一个 <em>test.php</em>, 代码如下:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">session_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $_SESSION </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这里的写法 第一次碰到</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  print</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&lt;script&gt;window.location=&#39;index.php&#39;&lt;/script&gt;&quot;</span></span></code></pre></div><p>新建了一个 <em>index.php</em>, 代码如下:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> @</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">session_start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> var_dump</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($_SESSION);</span></span></code></pre></div><p>运行以后跳转到 index.php 发现 获取到的 $_SESSION 是空的, 证明了猜想 $_SESSION 写入的时候没有写进去 或者 为空,于是 修改了一下 本地的测试代码:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$_SESSION[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span></code></pre></div><p>然后：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var_dump</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($_SESSION[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;user&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span></code></pre></div><p>这样一修改,就能正常写入,并且输出.</p><h4 id="问题" tabindex="-1">问题: <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题:&quot;">​</a></h4><p>因为老系统 很多个 地方 <em>$_SESSION</em> 是直接赋值 并且获取 使用的 没法修改, 之前能用. 突然不能用了.怎么快速的解决呢？</p><ol><li><p>万能大法, 凡事不会找 谷歌, 搜了半天 告诉的是 上面的那种写法 $_SESSION 直接赋值会出现不稳定或者是 数据覆盖的可能, 建议直接使用 $_SESSION</p></li><li><p>Chatgpt 上搜一下 也是 $_SESSION 直接赋值会出现不稳定或者是 数据覆盖的可能</p></li></ol><h4 id="解决" tabindex="-1">解决: <a class="header-anchor" href="#解决" aria-label="Permalink to &quot;解决:&quot;">​</a></h4><p>如上,在不大规模的修改 代码的时候 怎么解决 这个问题, 于是一点点的翻, 最后想到的是 session 一般来说是存储的文件, 是不是 $data 太大,导致文件目录满了,于是 查看了一下 php.ini 中 session.save_path 的路径 <strong>/tmp/session</strong> 然后 查看了一下 /tmp 的大小.没满.</p><p>最后 迫不得已, 尝试把 <strong>/tmp/session</strong> 目录给删除,然后 新建了 <strong>session</strong>目录, 于是 就神奇的 $_SESSION=$data 存储可用了.于是这个 奇妙的 问题就解决了.</p><h4 id="最后的最后" tabindex="-1">最后的最后 <a class="header-anchor" href="#最后的最后" aria-label="Permalink to &quot;最后的最后&quot;">​</a></h4><p><strong>$_SESSION是一个特殊的超全局数组，用于在会话之间存储数据。直接给$_SESSION赋值可能会导致不稳定的行为和不一致性，因为它会覆盖会话中已有的数据。</strong></p>`,26)]))}const E=i(t,[["render",l]]);export{d as __pageData,E as default};
