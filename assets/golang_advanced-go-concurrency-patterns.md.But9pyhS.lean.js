import{_ as i,c as a,o as n,a6 as t}from"./chunks/framework.BNAytzmZ.js";const g=JSON.parse('{"title":"Advanced Go Concurrency Patterns for Scalable Applications","description":"Explore advanced Go concurrency patterns like worker pools, fan-in/fan-out, semaphores, and context management to build highly scalable and performant applications.","frontmatter":{"title":"Advanced Go Concurrency Patterns for Scalable Applications","date":"2025-08-18T00:00:00.000Z","tags":["golang","concurrency","patterns","scalability","performance"],"author":"PFinal南丞","keywords":"golang, concurrency, worker pools, fan-in, fan-out, semaphore, context, performance, scalability, best practices","description":"Explore advanced Go concurrency patterns like worker pools, fan-in/fan-out, semaphores, and context management to build highly scalable and performant applications.","head":[["meta",{"name":"keywords","content":"golang, concurrency, worker pools, fan-in, fan-out, semaphore, context, performance, scalability, best practices"}]]},"headers":[],"relativePath":"golang/advanced-go-concurrency-patterns.md","filePath":"golang/advanced-go-concurrency-patterns.md","lastUpdated":1755497083000}'),h={name:"golang/advanced-go-concurrency-patterns.md"};function k(l,s,p,e,E,r){return n(),a("div",{"data-pagefind-body":!0},s[0]||(s[0]=[t("",42)]))}const y=i(h,[["render",k]]);export{g as __pageData,y as default};
