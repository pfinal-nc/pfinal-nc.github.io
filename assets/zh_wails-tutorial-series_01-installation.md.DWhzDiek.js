import{_ as i,c as a,o as n,a6 as l}from"./chunks/framework.jfW-voGb.js";const c=JSON.parse('{"title":"Wails 教程系列 - 环境搭建与安装","description":"详细介绍如何为 Wails 开发准备环境，包括 Go、Node.js 的安装以及 Wails CLI 的获取。","frontmatter":{"title":"Wails 教程系列 - 环境搭建与安装","date":"2025-08-22T00:00:00.000Z","author":"PFinalClub","description":"详细介绍如何为 Wails 开发准备环境，包括 Go、Node.js 的安装以及 Wails CLI 的获取。","head":[["meta",{"name":"keywords","content":"pfinalclub, git, gitsite, javascript, node, jquery, python, php, laravel, sql, database, linux, operating system, os, cpu, verilog, risc-v, bitcoin, ethereum, ai, 教程, 软件, 编程, 开发, 运维, 云计算, 网络, 互联网, 比特币, 以太坊, 操作系统, 智能合约, 数字货币, 爬虫, 逆向"}]]},"headers":[],"relativePath":"zh/wails-tutorial-series/01-installation.md","filePath":"zh/wails-tutorial-series/01-installation.md","lastUpdated":1756089332000}'),e={name:"zh/wails-tutorial-series/01-installation.md"};function t(p,s,h,d,o,k){return n(),a("div",{"data-pagefind-body":!0},s[0]||(s[0]=[l(`<h1 id="wails-教程系列-环境搭建与安装" tabindex="-1">Wails 教程系列 - 环境搭建与安装 <a class="header-anchor" href="#wails-教程系列-环境搭建与安装" aria-label="Permalink to &quot;Wails 教程系列 - 环境搭建与安装&quot;">​</a></h1><p>在开始用 Wails 写桌面应用之前，我们需要先把开发环境搭起来。说白了就是装 Go 语言、Node.js 和 Wails 命令行工具。</p><p>这个教程会一步步带你搞定这些，最后还会验证一下是不是都装对了。</p><h2 id="支持的平台" tabindex="-1">支持的平台 <a class="header-anchor" href="#支持的平台" aria-label="Permalink to &quot;支持的平台&quot;">​</a></h2><p>根据 <a href="https://wails.golang.ac.cn/docs/gettingstarted/installation/" target="_blank" rel="noreferrer">官方文档</a>，Wails 支持这些平台：</p><ul><li><strong>Windows</strong>: 10/11 AMD64/ARM64</li><li><strong>macOS</strong>: 10.13+ AMD64, 11.0+ ARM64</li><li><strong>Linux</strong>: AMD64/ARM64</li></ul><h2 id="_1-安装-go-语言-1-20" tabindex="-1">1. 安装 Go 语言 (1.20+) <a class="header-anchor" href="#_1-安装-go-语言-1-20" aria-label="Permalink to &quot;1. 安装 Go 语言 (1.20+)&quot;">​</a></h2><p>Wails 是用 Go 写的，所以第一步就是装 Go。</p><h3 id="下载与安装" tabindex="-1">下载与安装 <a class="header-anchor" href="#下载与安装" aria-label="Permalink to &quot;下载与安装&quot;">​</a></h3><p>去 <a href="https://golang.org/dl/" target="_blank" rel="noreferrer">Go 官网</a> 下载适合你系统的版本。</p><ul><li>macOS 用户：用 <code>.pkg</code> 安装包</li><li>Windows 用户：用 <code>.msi</code> 安装包</li><li>Linux 用户：下载 <code>.tar.gz</code> 包解压到 <code>/usr/local</code></li></ul><h3 id="验证安装" tabindex="-1">验证安装 <a class="header-anchor" href="#验证安装" aria-label="Permalink to &quot;验证安装&quot;">​</a></h3><p>打开终端，运行这个命令看看 Go 装好了没：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre></div><p>应该能看到类似这样的输出：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>go version go1.22.5 darwin/arm64</span></span></code></pre></div><p>如果显示 <code>command not found</code> 或版本太低，说明安装有问题或者 PATH 没配好。</p><h3 id="配置-gopath-和-path" tabindex="-1">配置 GOPATH 和 PATH <a class="header-anchor" href="#配置-gopath-和-path" aria-label="Permalink to &quot;配置 GOPATH 和 PATH&quot;">​</a></h3><p>默认情况下，Go 会把你的工作区放在 <code>$HOME/go</code> (Linux/macOS) 或 <code>%USERPROFILE%\\go</code> (Windows)。Go 的二进制文件在 <code>$GOROOT/bin</code>，通过 <code>go install</code> 装的工具在 <code>$GOPATH/bin</code> 或 <code>$HOME/go/bin</code>。</p><p>你得确保 <code>$HOME/go/bin</code> 已经加到 <code>PATH</code> 环境变量里，这样你才能在任何地方用 <code>go</code> 命令和装的各种工具。</p><p>用这个命令检查一下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $PATH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go/bin</span></span></code></pre></div><p>如果啥都没输出，说明需要添加。编辑你的 shell 配置文件（比如 <code>~/.bashrc</code>, <code>~/.zshrc</code>, <code>~/.profile</code> 等），加上这行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH:$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)/bin</span></span></code></pre></div><p>然后重新加载配置文件或者重启终端。</p><h2 id="_2-安装-node-js-和-npm-node-15" tabindex="-1">2. 安装 Node.js 和 NPM (Node 15+) <a class="header-anchor" href="#_2-安装-node-js-和-npm-node-15" aria-label="Permalink to &quot;2. 安装 Node.js 和 NPM (Node 15+)&quot;">​</a></h2><p>虽然 Wails 后端是用 Go 写的，但前端部分通常会用现代 Web 技术，这就需要 Node.js 和 NPM 来管理依赖和构建工具。</p><h3 id="下载与安装-1" tabindex="-1">下载与安装 <a class="header-anchor" href="#下载与安装-1" aria-label="Permalink to &quot;下载与安装&quot;">​</a></h3><p>去 <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js 官网</a> 下载最新的 LTS 版本。</p><h3 id="验证安装-1" tabindex="-1">验证安装 <a class="header-anchor" href="#验证安装-1" aria-label="Permalink to &quot;验证安装&quot;">​</a></h3><p>装完后，在终端运行这些命令验证一下：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><p>应该能看到 Node.js 和 NPM 的版本号。</p><h2 id="_3-平台特定依赖项" tabindex="-1">3. 平台特定依赖项 <a class="header-anchor" href="#_3-平台特定依赖项" aria-label="Permalink to &quot;3. 平台特定依赖项&quot;">​</a></h2><p>根据官方文档，不同平台需要装特定的依赖：</p><h3 id="windows" tabindex="-1">Windows <a class="header-anchor" href="#windows" aria-label="Permalink to &quot;Windows&quot;">​</a></h3><p><strong>WebView2 Runtime</strong>: Windows 10/11 需要装 Microsoft Edge WebView2 Runtime。有些 Windows 系统已经包含了。你可以用 <code>wails doctor</code> 命令检查一下。</p><p>如果没装，可以去 <a href="https://developer.microsoft.com/en-us/microsoft-edge/webview2/" target="_blank" rel="noreferrer">WebView2 Runtime 下载页面</a> 下载安装。</p><h3 id="macos" tabindex="-1">macOS <a class="header-anchor" href="#macos" aria-label="Permalink to &quot;macOS&quot;">​</a></h3><p><strong>Xcode Command Line Tools</strong>: 需要装 Xcode 命令行工具。打开终端运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xcode-select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre></div><p>然后按提示完成安装。</p><h3 id="linux" tabindex="-1">Linux <a class="header-anchor" href="#linux" aria-label="Permalink to &quot;Linux&quot;">​</a></h3><p>Linux 需要标准的 <code>gcc</code> 构建工具以及 <code>libgtk3</code> 和 <code>libwebkit</code>。为了避免列出太多针对不同发行版的命令，Wails 会尝试确定针对你特定发行版的安装命令。</p><p><strong>Ubuntu/Debian</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-essential</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgtk-3-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libwebkit2gtk-4.0-dev</span></span></code></pre></div><p><strong>Fedora</strong>:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc-c++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gtk3-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webkit2gtk4.0-devel</span></span></code></pre></div><p><strong>重要提示</strong>: 如果你用的是最新版本的 Linux（比如 Ubuntu 24.04），而且它不支持 <code>libwebkit2gtk-4.0-dev</code>，那你可能会在 <code>wails doctor</code> 中遇到问题：<code>libwebkit</code> 未找到。为了解决这个问题，你可以装 <code>libwebkit2gtk-4.1-dev</code>，并在构建时用标签 <code>-tags webkit2_41</code>。</p><h2 id="_4-安装-wails-cli" tabindex="-1">4. 安装 Wails CLI <a class="header-anchor" href="#_4-安装-wails-cli" aria-label="Permalink to &quot;4. 安装 Wails CLI&quot;">​</a></h2><p>现在万事俱备，可以装 Wails CLI 工具了。Wails CLI 是个命令行工具，用来创建、开发和构建 Wails 项目。</p><h3 id="使用-go-install-安装" tabindex="-1">使用 <code>go install</code> 安装 <a class="header-anchor" href="#使用-go-install-安装" aria-label="Permalink to &quot;使用 \`go install\` 安装&quot;">​</a></h3><p>打开终端，运行这个命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/wailsapp/wails/v2/cmd/wails@latest</span></span></code></pre></div><p>这个命令会下载最新版本的 Wails CLI 并装到你的 <code>$GOPATH/bin</code> 目录下。</p><h3 id="验证安装-2" tabindex="-1">验证安装 <a class="header-anchor" href="#验证安装-2" aria-label="Permalink to &quot;验证安装&quot;">​</a></h3><p>装完后，运行这个命令验证一下 Wails CLI 是不是装成功了：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre></div><p>应该能看到 Wails 的版本信息。</p><p>如果提示 <code>command not found</code>，请再次确认 <code>$GOPATH/bin</code> 已经正确加到 <code>PATH</code> 环境变量里，并重启终端。</p><h3 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h3><h4 id="_1-模板文件错误" tabindex="-1">1. 模板文件错误 <a class="header-anchor" href="#_1-模板文件错误" aria-label="Permalink to &quot;1. 模板文件错误&quot;">​</a></h4><p>如果你遇到类似这样的错误：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>....\\Go\\pkg\\mod\\github.com\\wailsapp\\wails\\[email protected]\\pkg\\templates\\templates.go:28:12: pattern all:ides/*: no matching files found</span></span></code></pre></div><p>请检查你是不是已经装了 Go 1.18+：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre></div><h4 id="_2-网络连接问题" tabindex="-1">2. 网络连接问题 <a class="header-anchor" href="#_2-网络连接问题" aria-label="Permalink to &quot;2. 网络连接问题&quot;">​</a></h4><p>如果你在运行 <code>go install github.com/wailsapp/wails/v2/cmd/wails@latest</code> 时遇到网络连接错误：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://proxy.golang.org/github.com/wailsapp/wails/cmd/wails/@v/list&quot;: dial tcp 172.217.163.49:443: connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.</span></span></code></pre></div><p>这通常是因为网络问题或 Go 代理设置导致的。解决方案：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 Go 模块模式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GO111MODULE=on</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置国内代理</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY=https://goproxy.cn,direct</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 然后重新安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/wailsapp/wails/v2/cmd/wails@latest</span></span></code></pre></div><p><strong>其他可用的代理选项：</strong></p><ul><li><code>https://goproxy.cn,direct</code> (推荐，国内)</li><li><code>https://goproxy.io,direct</code></li><li><code>https://mirrors.aliyun.com/goproxy/,direct</code></li></ul><p>如果还是有问题，可以试试：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 清理模块缓存</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -modcache</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新安装</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/wailsapp/wails/v2/cmd/wails@latest</span></span></code></pre></div><h4 id="_3-wails-dev-卡在-idealtree-frontend" tabindex="-1">3. wails dev 卡在 idealTree:frontend <a class="header-anchor" href="#_3-wails-dev-卡在-idealtree-frontend" aria-label="Permalink to &quot;3. wails dev 卡在 idealTree:frontend&quot;">​</a></h4><p>如果你运行 <code>wails dev</code> 时一直卡在 <code>idealTree:frontend: sill idealTree buildDeps</code>，这通常是 <code>npm install</code> 失败导致的。</p><p><strong>解决步骤：</strong></p><ol><li><p><strong>手动检查 npm install</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入前端目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frontend</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 手动运行 npm install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></li><li><p><strong>如果 npm install 失败，检查错误信息</strong></p><ul><li>查看具体的错误信息</li><li>可能是网络问题、依赖冲突或权限问题</li></ul></li><li><p><strong>常见解决方案：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 清理 npm 缓存</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cache</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --force</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除 node_modules 和 package-lock.json</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node_modules</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> package-lock.json</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新安装依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></li><li><p><strong>如果还是有问题，试试用国内镜像：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 npm 镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://registry.npmmirror.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者用 yarn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yarn</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div></li><li><p><strong>检查 Node.js 版本兼容性：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查 Node.js 版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 确保版本 &gt;= 15</span></span></code></pre></div></li><li><p><strong>重新启动 wails dev：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 回到项目根目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重新启动开发服务器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span></code></pre></div></li></ol><h4 id="_4-macos-特有错误" tabindex="-1">4. macOS 特有错误 <a class="header-anchor" href="#_4-macos-特有错误" aria-label="Permalink to &quot;4. macOS 特有错误&quot;">​</a></h4><p>如果你在 macOS 上遇到这些错误：</p><p><strong>错误：<code>xcrun: error: invalid active developer path</code></strong></p><ul><li><strong>原因</strong>：Xcode Command Line Tools 没装或坏了</li><li><strong>解决</strong>：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xcode-select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre></div></li></ul><p><strong>错误：<code>ld: library not found for -lSystem</code></strong></p><ul><li><strong>原因</strong>：macOS SDK 缺失</li><li><strong>解决</strong>：重新装 Xcode 或 Command Line Tools<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 重置 Xcode 路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xcode-select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --reset</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者重新装 Command Line Tools</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xcode-select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre></div></li></ul><p><strong>如果上面的方法没用，可以试试：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 完全删除并重新装 Command Line Tools</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /Library/Developer/CommandLineTools</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xcode-select</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span></span></code></pre></div><h4 id="_5-windows-特有错误" tabindex="-1">5. Windows 特有错误 <a class="header-anchor" href="#_5-windows-特有错误" aria-label="Permalink to &quot;5. Windows 特有错误&quot;">​</a></h4><p>如果你在 Windows 上遇到这些错误：</p><p><strong>错误：<code>MSBuild not found</code></strong></p><ul><li><strong>原因</strong>：缺少 MSVC 构建工具</li><li><strong>解决</strong>：装 Visual Studio 2022 Desktop development with C++ 工作负载</li></ul><p><strong>错误：<code>link.exe not found</code></strong></p><ul><li><strong>原因</strong>：环境变量没配置</li><li><strong>解决</strong>：<div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 在 VS 安装目录运行</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 或者重启后用 Developer Command Prompt</span></span></code></pre></div></li></ul><p><strong>错误：<code>wails: syscall/js is only available on GOARCH=wasm</code></strong></p><ul><li><strong>原因</strong>：Windows 上 Go 配置有问题</li><li><strong>解决</strong>：检查 Go 版本，确保为 amd64/arm64，且不是 WebAssembly 模式<div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 检查 Go 架构</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">go env GOARCH</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"># 应该显示 amd64 或 arm64，而不是 wasm</span></span></code></pre></div></li></ul><h4 id="_6-linux-ubuntu-debian-特有错误" tabindex="-1">6. Linux (Ubuntu/Debian) 特有错误 <a class="header-anchor" href="#_6-linux-ubuntu-debian-特有错误" aria-label="Permalink to &quot;6. Linux (Ubuntu/Debian) 特有错误&quot;">​</a></h4><p>如果你在 Linux 上遇到这些错误：</p><p><strong>错误：<code>pkg-config: command not found</code></strong></p><ul><li><strong>原因</strong>：缺少系统依赖</li><li><strong>解决</strong>：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build-essential</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgtk-3-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libwebkit2gtk-4.0-dev</span></span></code></pre></div></li></ul><p><strong>错误：<code>cannot find -lgtk-3</code> 或 <code>cannot find -lwebkit2gtk-4.0</code></strong></p><ul><li><strong>原因</strong>：缺少 GTK/WebKit 库</li><li><strong>解决</strong>：装对应依赖<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libgtk-3-dev</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libwebkit2gtk-4.0-dev</span></span></code></pre></div></li></ul><p><strong>对于其他 Linux 发行版：</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Fedora/CentOS/RHEL</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dnf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc-c++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gtk3-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webkit2gtk4.0-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Arch Linux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gtk3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webkit2gtk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># OpenSUSE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zypper</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc-c++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gtk3-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webkit2gtk4-devel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span></span></code></pre></div><h2 id="_5-可选依赖项" tabindex="-1">5. 可选依赖项 <a class="header-anchor" href="#_5-可选依赖项" aria-label="Permalink to &quot;5. 可选依赖项&quot;">​</a></h2><ul><li><strong>UPX</strong>: 用来压缩你的应用</li><li><strong>NSIS</strong>: 用来生成 Windows 安装程序</li></ul><p>这些是可选的，但能让你构建更专业的应用。</p><h2 id="_6-用-wails-doctor-检查环境" tabindex="-1">6. 用 <code>wails doctor</code> 检查环境 <a class="header-anchor" href="#_6-用-wails-doctor-检查环境" aria-label="Permalink to &quot;6. 用 \`wails doctor\` 检查环境&quot;">​</a></h2><p>Wails 提供了一个方便的命令 <code>wails doctor</code> 来检查你的开发环境是不是满足所有要求。</p><p>在终端运行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doctor</span></span></code></pre></div><p>这个命令会输出一个检查报告，列出所有必需和可选的依赖项及其状态。如果所有必需项都显示为 <code>[✓]</code> 或 <code>OK</code>，那你的环境就准备好了。</p><p>如果发现任何问题，请根据报告中的提示修复。</p><h2 id="_7-故障排除" tabindex="-1">7. 故障排除 <a class="header-anchor" href="#_7-故障排除" aria-label="Permalink to &quot;7. 故障排除&quot;">​</a></h2><h3 id="wails-命令似乎不见了" tabindex="-1"><code>wails</code> 命令似乎不见了？ <a class="header-anchor" href="#wails-命令似乎不见了" aria-label="Permalink to &quot;\`wails\` 命令似乎不见了？&quot;">​</a></h3><p>如果系统报告 <code>wails</code> 命令丢失，请确保你已经正确遵循 Go 安装指南。通常，这意味着你用户主目录中的 <code>go/bin</code> 目录不在 <code>PATH</code> 环境变量中。</p><p>你需要：</p><ol><li>检查 <code>echo $PATH | grep go/bin</code> 是否有输出</li><li>如果没有，添加 <code>export PATH=$PATH:$(go env GOPATH)/bin</code> 到你的 shell 配置文件</li><li>关闭并重新打开终端，让环境变量生效</li></ol><h2 id="验证安装-3" tabindex="-1">验证安装 <a class="header-anchor" href="#验证安装-3" aria-label="Permalink to &quot;验证安装&quot;">​</a></h2><p>完成所有安装后，运行这些命令验证环境：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查 Go</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查 Node.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查 Wails</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 全面检查环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> doctor</span></span></code></pre></div><p>如果所有命令都正常输出，恭喜你！开发环境已经配置完毕。</p><h2 id="高级安装选项" tabindex="-1">高级安装选项 <a class="header-anchor" href="#高级安装选项" aria-label="Permalink to &quot;高级安装选项&quot;">​</a></h2><h3 id="从源码安装-开发版本" tabindex="-1">从源码安装（开发版本） <a class="header-anchor" href="#从源码安装-开发版本" aria-label="Permalink to &quot;从源码安装（开发版本）&quot;">​</a></h3><p>如果你需要最新的开发版本或特定分支，可以从源码安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 克隆仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/wailsapp/wails</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 进入 CLI 目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wails/v2/cmd/wails</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装开发版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="安装特定分支" tabindex="-1">安装特定分支 <a class="header-anchor" href="#安装特定分支" aria-label="Permalink to &quot;安装特定分支&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 克隆仓库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/wailsapp/wails</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wails</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 切换到特定分支</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> branch-to-test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --track</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin/branch-to-test</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装该分支版本</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v2/cmd/wails</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="回退到稳定版本" tabindex="-1">回退到稳定版本 <a class="header-anchor" href="#回退到稳定版本" aria-label="Permalink to &quot;回退到稳定版本&quot;">​</a></h3><p>如果你装了开发版本想要回退到稳定版本：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/wailsapp/wails/v2/cmd/wails@latest</span></span></code></pre></div><h3 id="使用本地-wails-版本" tabindex="-1">使用本地 Wails 版本 <a class="header-anchor" href="#使用本地-wails-版本" aria-label="Permalink to &quot;使用本地 Wails 版本&quot;">​</a></h3><p>如果你在开发 Wails 本身，可以让项目使用本地的 Wails 版本：</p><p>在项目的 <code>go.mod</code> 文件中添加：</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">replace github.com</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wailsapp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wails</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">v2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">你的本地路径</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>例如：</p><ul><li>Windows: <code>replace github.com/wailsapp/wails/v2 =&gt; C:\\Users\\username\\Documents\\wails\\v2</code></li><li>Linux/macOS: <code>replace github.com/wailsapp/wails/v2 =&gt; /home/username/projects/wails/v2</code></li></ul><h2 id="环境变量配置" tabindex="-1">环境变量配置 <a class="header-anchor" href="#环境变量配置" aria-label="Permalink to &quot;环境变量配置&quot;">​</a></h2><h3 id="go-环境变量" tabindex="-1">Go 环境变量 <a class="header-anchor" href="#go-环境变量" aria-label="Permalink to &quot;Go 环境变量&quot;">​</a></h3><p>确保这些环境变量正确配置：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 检查 Go 环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPATH</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOROOT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GO111MODULE</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置 Go 代理（如果需要）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY=https://goproxy.cn,direct</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GO111MODULE=on</span></span></code></pre></div><h3 id="path-环境变量" tabindex="-1">PATH 环境变量 <a class="header-anchor" href="#path-环境变量" aria-label="Permalink to &quot;PATH 环境变量&quot;">​</a></h3><p>确保 Go 二进制目录在 PATH 中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Linux/macOS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH:$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)/bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Windows (在系统环境变量中添加)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># %GOPATH%\\bin 或 %USERPROFILE%\\go\\bin</span></span></code></pre></div><h3 id="验证环境变量" tabindex="-1">验证环境变量 <a class="header-anchor" href="#验证环境变量" aria-label="Permalink to &quot;验证环境变量&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 验证 PATH 配置</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $PATH </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go/bin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 验证 Go 配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPATH</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY</span></span></code></pre></div><hr><p>现在你的开发环境已经配置完毕，可以开始创建你的第一个 Wails 应用了。在下一篇文章中，我们将学习如何用 <code>wails init</code> 命令来创建一个新项目。</p>`,147)]))}const g=i(e,[["render",t]]);export{c as __pageData,g as default};
