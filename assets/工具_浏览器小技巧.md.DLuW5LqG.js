import{_ as t,c as e,o as s,a6 as i}from"./chunks/framework.B5rgnJXo.js";const k=JSON.parse('{"title":"浏览器小技巧","description":"浏览器小技巧","frontmatter":{"title":"浏览器小技巧","date":"2023-05-15T10:14:02.000Z","tags":["工具"],"description":"浏览器小技巧","author":"PFinal南丞","keywords":"浏览器小技巧, 浏览器, 技巧","head":[["meta",{"name":"keywords","content":"浏览器小技巧, 浏览器, 技巧,pfinalclub, git, gitsite, javascript, node, jquery, python, php, laravel, sql, database, linux, operating system, os, cpu, verilog, risc-v, bitcoin, ethereum, ai, 教程, 软件, 编程, 开发, 运维, 云计算, 网络, 互联网, 比特币, 以太坊, 操作系统, 智能合约, 数字货币, 爬虫, 逆向"}]]},"headers":[],"relativePath":"工具/浏览器小技巧.md","filePath":"工具/浏览器小技巧.md","lastUpdated":1742433506000}'),l={name:"工具/浏览器小技巧.md"};function n(p,a,h,r,o,d){return s(),e("div",{"data-pagefind-body":!0},a[0]||(a[0]=[i(`<h1 id="浏览器小技巧" tabindex="-1">浏览器小技巧 <a class="header-anchor" href="#浏览器小技巧" aria-label="Permalink to &quot;浏览器小技巧&quot;">​</a></h1><h3 id="起因" tabindex="-1">起因 <a class="header-anchor" href="#起因" aria-label="Permalink to &quot;起因&quot;">​</a></h3><p>最近一直在处理老系统的一些数据, 处理的过程中,需要经常 对 查询结果 进行比对,然后 处理等操作. 经常需要把 查询的结果 复制出来, 然后新建一个文件 粘贴进去,对剪贴板使用频率大大的提高了. 于是 Google 了一下,发现 很多控制剪贴板需要下载软件,有点麻烦,于是 找到了 浏览器 自带的 剪贴板 功能.</p><h3 id="浏览器-剪贴板" tabindex="-1">浏览器 剪贴板 <a class="header-anchor" href="#浏览器-剪贴板" aria-label="Permalink to &quot;浏览器 剪贴板&quot;">​</a></h3><p>无意间在 网上看到,在浏览器 地址中输入:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>data:text/html, &lt;html contenteditable&gt;</span></span></code></pre></div><p>然后回车, 就可以在浏览器中整出了一个剪贴板.效果如下:</p><p><img src="https://raw.githubusercontent.com/pfinal-nc/iGallery/master/blog/202311291008496.png" alt=""></p><p>直接可以 粘贴想要粘贴的东西.</p><h3 id="在alfred-中使用" tabindex="-1">在Alfred 中使用 <a class="header-anchor" href="#在alfred-中使用" aria-label="Permalink to &quot;在Alfred 中使用&quot;">​</a></h3><p>由于 经常使用的软件是 Alfred, 于是就 研究了一下 在 Alfred 中 如何快速的打开 浏览器 剪贴板.编写了一个快捷方式如下:</p><p><img src="https://raw.githubusercontent.com/pfinal-nc/iGallery/master/blog/202311291006477.png" alt=""></p><p>实际就是在 Alfred 中 编写一个关键字, 关键字执行的操作是 打开 <code>data:text/html, &lt;html contenteditable&gt;</code> 这个url</p><h3 id="在终端中使用" tabindex="-1">在终端中使用 <a class="header-anchor" href="#在终端中使用" aria-label="Permalink to &quot;在终端中使用&quot;">​</a></h3><p>由于默认的浏览器是 chrome 于是在好奇,在其他浏览器中是否也可以使用, 于是 打开 Safari 浏览器, 输入 <code>data:text/html, &lt;html contenteditable&gt;</code> 发现也可以使用. 于是本着, 能用命令行 尽量不用快捷键 在 终端打开:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># chrome 浏览器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/Applications/Google Chrome.app&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> data:text/html,%20%3Chtml%20contenteditable%3E</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Safari 浏览器</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">open</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/Applications/Safari.app&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> data:text/html,%20%3Chtml%20contenteditable%3E</span></span></code></pre></div><p>在终端也是可以能够打开使用的.</p>`,17)]))}const g=t(l,[["render",n]]);export{k as __pageData,g as default};
