import{_ as i,c as a,o as n,a6 as t}from"./chunks/framework.jfW-voGb.js";const g=JSON.parse('{"title":"How to Implement RESTful API Versioning?","description":"A deep dive into strategies and practices for RESTful API versioning, including URI, header, and content negotiation methods, with detailed examples in Go.","frontmatter":{"title":"How to Implement RESTful API Versioning?","date":"2025-08-18T00:00:00.000Z","tags":["golang","RESTful API","API Versioning","Microservices"],"author":"PFinal南丞","keywords":"golang, RESTful API, API versioning, microservices, software architecture, URI versioning, header versioning, content negotiation","description":"A deep dive into strategies and practices for RESTful API versioning, including URI, header, and content negotiation methods, with detailed examples in Go.","head":[["meta",{"name":"keywords","content":"golang, RESTful API, API versioning, microservices, software architecture, URI versioning, header versioning, content negotiation"}]]},"headers":[],"relativePath":"golang/restful-api-versioning.en.md","filePath":"golang/restful-api-versioning.en.md","lastUpdated":1755497083000}'),e={name:"golang/restful-api-versioning.en.md"};function l(h,s,p,k,r,E){return n(),a("div",{"data-pagefind-body":!0},s[0]||(s[0]=[t("",55)]))}const o=i(e,[["render",l]]);export{g as __pageData,o as default};
