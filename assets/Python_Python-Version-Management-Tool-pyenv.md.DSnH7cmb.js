import{_ as n,c as e,o as s,a6 as t}from"./chunks/framework.CFJSBgzT.js";const u=JSON.parse('{"title":"Python Version Management Tool pyenv","description":"Detailed introduction to pyenv, a powerful Python version management tool, including installation, configuration, version switching, virtual environment management, and other core functions to help developers easily manage multiple Python versions.","frontmatter":{"title":"Python Version Management Tool pyenv","date":"2023-04-27T22:10:20.000Z","author":"PFinal南丞","tags":["python"],"keywords":"Python Version Management Tool pyenv, python, tool, python version management, pyenv tutorial, python environment configuration","description":"Detailed introduction to pyenv, a powerful Python version management tool, including installation, configuration, version switching, virtual environment management, and other core functions to help developers easily manage multiple Python versions.","head":[["meta",{"name":"keywords","content":"Python Version Management Tool pyenv, python, tool, python version management, pyenv tutorial, python environment configuration"}]]},"headers":[],"relativePath":"Python/Python-Version-Management-Tool-pyenv.md","filePath":"Python/Python-Version-Management-Tool-pyenv.md","lastUpdated":1752111561000}'),i={name:"Python/Python-Version-Management-Tool-pyenv.md"};function l(o,a,p,r,c,h){return s(),e("div",{"data-pagefind-body":!0},a[0]||(a[0]=[t(`<h1 id="python-version-management-tool-pyenv-the-best-python-version-management-tool" tabindex="-1">Python Version Management Tool - pyenv: The Best Python Version Management Tool <a class="header-anchor" href="#python-version-management-tool-pyenv-the-best-python-version-management-tool" aria-label="Permalink to &quot;Python Version Management Tool - pyenv: The Best Python Version Management Tool&quot;">​</a></h1><h3 id="preface" tabindex="-1">Preface <a class="header-anchor" href="#preface" aria-label="Permalink to &quot;Preface&quot;">​</a></h3><p>Previously, I always used virtualenv and virtualenvwrapper to manage Python virtual environments, but there was a problem: to create a virtual environment for a specific version, you must first install that Python version. For example, if I want to create a virtual environment based on Python 3.6, I must first install Python 3.6 (whether directly or from source, it&#39;s troublesome), and then create the virtual environment based on the installed version. Since I learned about pyenv, I hardly use the above tools anymore. (Note: pyenv is not very friendly to Windows platforms.)</p><h3 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h3><blockquote><p>GitHub <a href="https://github.com/pyenv/pyenv" target="_blank" rel="noreferrer">https://github.com/pyenv/pyenv</a></p></blockquote><h3 id="ubuntu-installation" tabindex="-1">Ubuntu Installation <a class="header-anchor" href="#ubuntu-installation" aria-label="Permalink to &quot;Ubuntu Installation&quot;">​</a></h3><h4 id="download" tabindex="-1">Download <a class="header-anchor" href="#download" aria-label="Permalink to &quot;Download&quot;">​</a></h4><ul><li>Method 1 (slow):</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    git clone https://github.com/yyuu/pyenv.git ~/.pyenv</span></span></code></pre></div><ul><li>Method 2 (fast):</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash</span></span></code></pre></div><p>After executing the above, pyenv will be installed in the ~/.pyenv directory of the current user.</p><h4 id="edit-bashrc-file" tabindex="-1">Edit .bashrc file <a class="header-anchor" href="#edit-bashrc-file" aria-label="Permalink to &quot;Edit .bashrc file&quot;">​</a></h4><ol><li>Open the .bashrc file</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>vim ~/.bashrc</span></span></code></pre></div><ol start="2"><li>Copy the following content to the end</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>export PYENV_ROOT=/root/.pyenv</span></span>
<span class="line"><span>export PATH=$PYENV_ROOT/bin:$PATH</span></span>
<span class="line"><span>export PATH=$PYENV_ROOT/shims:$PATH</span></span>
<span class="line"><span>eval &quot;$(pyenv init -)&quot;</span></span></code></pre></div><ol start="3"><li>Update the .bashrc file</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>source ~/.bashrc</span></span></code></pre></div><h4 id="install-python-dependencies" tabindex="-1">Install Python dependencies <a class="header-anchor" href="#install-python-dependencies" aria-label="Permalink to &quot;Install Python dependencies&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>sudo apt-get install make build-essential libssl-dev zlib1g-dev</span></span>
<span class="line"><span>sudo apt-get install libbz2-dev libreadline-dev libsqlite3-dev wget curl</span></span>
<span class="line"><span>sudo apt-get install llvm libncurses5-dev libncursesw5-dev</span></span>
<span class="line"><span>sudo apt-get update</span></span></code></pre></div><h4 id="test-usage" tabindex="-1">Test usage <a class="header-anchor" href="#test-usage" aria-label="Permalink to &quot;Test usage&quot;">​</a></h4><p>Check if installation was successful</p><ul><li>Check current installed version</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>IN:</span></span>
<span class="line"><span>	pyenv --version</span></span>
<span class="line"><span>OUT:</span></span>
<span class="line"><span>	pyenv 1.2.27-34-gbba1289e</span></span></code></pre></div><ul><li>Check all installed Python versions</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>IN:</span></span>
<span class="line"><span>	pyenv versions</span></span>
<span class="line"><span>OUT:</span></span>
<span class="line"><span>	* system (set by /root/.pyenv/version)</span></span></code></pre></div><blockquote><p>Indicates only the system default version is currently installed</p></blockquote><h4 id="install-a-specific-python-version" tabindex="-1">Install a specific Python version <a class="header-anchor" href="#install-a-specific-python-version" aria-label="Permalink to &quot;Install a specific Python version&quot;">​</a></h4><ul><li>View all available versions</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    pyenv install --list</span></span></code></pre></div><ul><li>Install the desired version (here, Python 3.6.5)</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>IN:</span></span>
<span class="line"><span>	pyenv install 3.6.5</span></span>
<span class="line"><span>OUT:</span></span>
<span class="line"><span>  Downloading Python-3.6.5.tar.xz...</span></span>
<span class="line"><span>  -&gt; https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tar.xz</span></span>
<span class="line"><span>  Installing Python-3.6.5...</span></span>
<span class="line"><span>  Installed Python-3.6.5 to /root/.pyenv/versions/3.6.5</span></span></code></pre></div><ul><li>Check all Python versions again</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>IN:</span></span>
<span class="line"><span>	pyenv versions</span></span>
<span class="line"><span>OUT:</span></span>
<span class="line"><span>  * system (set by /root/.pyenv/version)</span></span>
<span class="line"><span>    3.6.5</span></span></code></pre></div><ul><li><p>Switch Python version</p><p>There are three switching methods: global, local, shell*</p><p>global: system-wide environment, always used until switched again</p><p>local: current login environment, invalid after reboot, returns to current global environment</p><p>shell: local (temporary) environment, invalid after closing the terminal, returns to current global environment</p><p>pyenv global 3.6.5</p></li><li><p>Uninstall a specific version</p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    pyenv uninstall 3.6.5</span></span></code></pre></div><h3 id="install-virtualenv" tabindex="-1">Install virtualenv <a class="header-anchor" href="#install-virtualenv" aria-label="Permalink to &quot;Install virtualenv&quot;">​</a></h3><ul><li>Download</li></ul><blockquote><p>pyenv already helps us install it as a plugin. If not installed, you need to install it manually</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    git clone https://github.com/pyenv/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv</span></span></code></pre></div><ul><li>Edit .bashrc file</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    vim ~/.bashrc</span></span></code></pre></div><ul><li>Copy the following content to the end</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    eval &quot;$(pyenv virtualenv-init -)&quot;</span></span></code></pre></div><ul><li>Update the .bashrc file</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    source ~/.bashrc</span></span></code></pre></div><h3 id="create-a-virtual-environment" tabindex="-1">Create a virtual environment <a class="header-anchor" href="#create-a-virtual-environment" aria-label="Permalink to &quot;Create a virtual environment&quot;">​</a></h3><ul><li><p>Usage: pyenv virtualenv 3.6.5 virtual_name (custom virtual environment name)</p></li><li><p>Example: pyenv virtualenv 3.6.5 test</p></li><li><p>Enter the virtual environment</p></li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>   pyenv activate test</span></span></code></pre></div><ul><li>Exit the virtual environment</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>   pyenv deactivate</span></span></code></pre></div><ul><li>Delete the virtual environment</li></ul><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    pyenv uninstall test</span></span></code></pre></div><p>Type yes to confirm</p><h3 id="common-commands" tabindex="-1">Common commands <a class="header-anchor" href="#common-commands" aria-label="Permalink to &quot;Common commands&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Usage: pyenv &lt;command&gt; [&lt;parameter&gt;]</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Commands:</span></span>
<span class="line"><span>  commands    View all commands</span></span>
<span class="line"><span>  local       Set or show the local Python version (current directory and its subdirectories)</span></span>
<span class="line"><span>  global      Set or show the global Python version</span></span>
<span class="line"><span>  shell       Set or show the shell-specific Python version (current session)</span></span>
<span class="line"><span>  install     Install a specified Python version</span></span>
<span class="line"><span>  uninstall   Uninstall a specified Python version</span></span>
<span class="line"><span>  version     Show the current Python version and its local path</span></span>
<span class="line"><span>  versions    View all installed versions</span></span>
<span class="line"><span>  which       Show the installation path</span></span></code></pre></div><h3 id="issues" tabindex="-1">Issues <a class="header-anchor" href="#issues" aria-label="Permalink to &quot;Issues&quot;">​</a></h3><ol><li>Switching not successful If after switching, the Python version is still the system default, you need to configure the environment variable. At the end of ~/.zshrc or ~/.bash_profile, add:</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>if which pyenv &gt; /dev/null;</span></span>
<span class="line"><span>  then eval &quot;$(pyenv init -)&quot;;</span></span>
<span class="line"><span>fi</span></span></code></pre></div>`,61)]))}const v=n(i,[["render",l]]);export{u as __pageData,v as default};
